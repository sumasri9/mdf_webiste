{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/api/getData/route.js"],"sourcesContent":["import { Pool } from \"pg\";\n\n// Set up your PostgreSQL connection\n// const pool = new Pool({\n//   user: \"postgres\",\n//   host: \"localhost\",\n//   database: \"ondemand\",\n//   password: \"9599\",\n//   port: 5432,\n// });\n\nconst pool = new Pool({\n  user: \"stockedit\",\n  host: \"localhost\",\n  database: \"stockinfo\",\n  password: \"oru2ioFaPugheec7\",\n  port: 5433,\n});\n\n// Named export for the `GET` method\nexport async function GET(req) {\n  try {\n    const totalQuantityQuery =\n      \"SELECT SUM(quantity) AS total_quantity FROM RAM_DIMM_sticks;\";\n    const ramCapacityQuery = `\n      SELECT RAM_capacity, SUM(quantity) AS count \n      FROM RAM_DIMM_sticks \n      GROUP BY RAM_capacity;\n    `;\n\n    const totalQuantityResult = await pool.query(totalQuantityQuery);\n    const ramCapacityResult = await pool.query(ramCapacityQuery);\n\n    const totalQuantity = totalQuantityResult.rows[0].total_quantity;\n    const ramCapacities = ramCapacityResult.rows;\n\n    return new Response(JSON.stringify({ totalQuantity, ramCapacities }), {\n      status: 200,\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n  } catch (error) {\n    console.error(\"Error fetching RAM data:\", error);\n    return new Response(\n      JSON.stringify({ message: \"Error fetching RAM data\", error }),\n      {\n        status: 500,\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    );\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,oCAAoC;AACpC,0BAA0B;AAC1B,sBAAsB;AACtB,uBAAuB;AACvB,0BAA0B;AAC1B,sBAAsB;AACtB,gBAAgB;AAChB,MAAM;AAEN,MAAM,OAAO,IAAI,2FAAA,CAAA,OAAI,CAAC;IACpB,MAAM;IACN,MAAM;IACN,UAAU;IACV,UAAU;IACV,MAAM;AACR;AAGO,eAAe,IAAI,GAAG;IAC3B,IAAI;QACF,MAAM,qBACJ;QACF,MAAM,mBAAmB,CAAC;;;;IAI1B,CAAC;QAED,MAAM,sBAAsB,MAAM,KAAK,KAAK,CAAC;QAC7C,MAAM,oBAAoB,MAAM,KAAK,KAAK,CAAC;QAE3C,MAAM,gBAAgB,oBAAoB,IAAI,CAAC,EAAE,CAAC,cAAc;QAChE,MAAM,gBAAgB,kBAAkB,IAAI;QAE5C,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE;YAAe;QAAc,IAAI;YACpE,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;QAChD;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,IAAI,SACT,KAAK,SAAS,CAAC;YAAE,SAAS;YAA2B;QAAM,IAC3D;YACE,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;QAChD;IAEJ;AACF"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}